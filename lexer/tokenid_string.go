// Code generated by "stringer -type=TokenId"; DO NOT EDIT.

package lexer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[INVALID-0]
	_ = x[EOF-1]
	_ = x[LF-2]
	_ = x[IDENTIFIER-3]
	_ = x[NUMBER-4]
	_ = x[STRING-5]
	_ = x[CHAR-6]
	_ = x[PLUS-7]
	_ = x[MINUS-8]
	_ = x[ASTERISK-9]
	_ = x[SLASH-10]
	_ = x[EQUALS-11]
	_ = x[COLON-12]
	_ = x[COMMA-13]
	_ = x[OPEN_PAREN-14]
	_ = x[CLOSE_PAREN-15]
	_ = x[OPEN_BRACE-16]
	_ = x[CLOSE_BRACE-17]
	_ = x[OPEN_BRACKET-18]
	_ = x[CLOSE_BRACKET-19]
	_ = x[COLON_EQUALS-20]
	_ = x[EXCLAMATION-21]
	_ = x[EQUALS_EQUALS-22]
	_ = x[EXCLAMATION_EQUALS-23]
	_ = x[PLUS_PLUS-24]
	_ = x[MINUS_MINUS-25]
	_ = x[CIRCUMFLEX-26]
	_ = x[PIPE-27]
	_ = x[PIPE_PIPE-28]
	_ = x[AND-29]
	_ = x[AND_AND-30]
	_ = x[DOT-31]
	_ = x[DOT_DOT_DOT-32]
	_ = x[LESS_THAN-33]
	_ = x[GREATER_THAN-34]
	_ = x[LESS_THAN_EQUALS-35]
	_ = x[GREATER_THAN_EQUALS-36]
	_ = x[IF-37]
	_ = x[ELSE-38]
	_ = x[RETURN-39]
	_ = x[FOR-40]
	_ = x[CONTINUE-41]
	_ = x[BREAK-42]
	_ = x[FN-43]
}

const _TokenId_name = "INVALIDEOFLFIDENTIFIERNUMBERSTRINGCHARPLUSMINUSASTERISKSLASHEQUALSCOLONCOMMAOPEN_PARENCLOSE_PARENOPEN_BRACECLOSE_BRACEOPEN_BRACKETCLOSE_BRACKETCOLON_EQUALSEXCLAMATIONEQUALS_EQUALSEXCLAMATION_EQUALSPLUS_PLUSMINUS_MINUSCIRCUMFLEXPIPEPIPE_PIPEANDAND_ANDDOTDOT_DOT_DOTLESS_THANGREATER_THANLESS_THAN_EQUALSGREATER_THAN_EQUALSIFELSERETURNFORCONTINUEBREAKFN"

var _TokenId_index = [...]uint16{0, 7, 10, 12, 22, 28, 34, 38, 42, 47, 55, 60, 66, 71, 76, 86, 97, 107, 118, 130, 143, 155, 166, 179, 197, 206, 217, 227, 231, 240, 243, 250, 253, 264, 273, 285, 301, 320, 322, 326, 332, 335, 343, 348, 350}

func (i TokenId) String() string {
	if i < 0 || i >= TokenId(len(_TokenId_index)-1) {
		return "TokenId(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenId_name[_TokenId_index[i]:_TokenId_index[i+1]]
}
